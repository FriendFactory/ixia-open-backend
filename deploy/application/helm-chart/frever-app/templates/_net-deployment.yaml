{{- define "frever-app.net-service-deployment" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Service }}-deployment
  annotations:
    meta.frever.com/deployed-from-branch: {{ .Values.deployInfo.branch | quote }}
    meta.frever.com/deployed-from-commit: {{ .Values.deployInfo.commit | quote }}
    meta.frever.com/deployed-by-user: {{ .Values.deployInfo.deployedBy | quote }}
    meta.frever.com/deployed-at: {{ .Values.deployInfo.deployedAt | quote }}
    meta.frever.com/deployed-from-computer: {{ .Values.deployInfo.deployedFrom | quote }}
spec:
  selector:
    matchLabels:
      app: {{ .Service }}
  {{ if .ReplicaCount }}
  replicas: {{ .ReplicaCount }}
  {{ else }}
  replicas: {{ .Values.serverInfo.minReplicas }}
  {{ end }}
  revisionHistoryLimit: 3
  strategy:
    {{ if eq (int .ReplicaCount) 1 }}
    type: Recreate
    {{ else }}
    type: RollingUpdate
    {{ end }}
  template:
    metadata:
      labels:
        app: {{ .Service }}
    spec:
      nodeSelector:
        AppGroup: {{ .Values.nodeGroup }}
      # affinity:
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #     - labelSelector:
      #         matchExpressions:
      #         - key: app
      #           operator: In
      #           values:
      #           - {{ .Service }}
      #       topologyKey: topology.kubernetes.io/zone
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: app-secrets
      containers:
        - name: {{ .Service }}-container
          image: "{{ dir .Values.repository }}/appservice:{{ .Values.imageLabel }}"
          imagePullPolicy: Always
          {{ include "frever-app.resources" . }}
          command:
              - dotnet
          args:
              - /app/{{.Service}}/{{ .Dll }}

          livenessProbe:
            httpGet:
              path: "/{{ .Values.apiIdentifier }}/{{ .Service }}/api/health"
              port: http
            initialDelaySeconds: 20
            periodSeconds: 30
            timeoutSeconds: 20
          readinessProbe:
            httpGet:
              path: "/{{ .Values.apiIdentifier }}/{{ .Service }}/api/health"
              port: http
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 2
          ports:
            - name: http
              containerPort: 80
          volumeMounts:
            - mountPath: "/mnt/ssm"
              name: secrets-store-inline
              readOnly: true
          env:
            - name: Environment
              value: "{{ .Release.Namespace }}"
            - name: ApiIdentifier
              value: "{{ .Values.apiIdentifier }}"
            - name: Logging__LogLevel__Microsoft
              value: "Warning"
            - name: Logging__LogLevel__IdentityServer4
              value: "Warning"
            - name: Logging__LogLevel__AWSSDK
              value: "Warning"
            - name: AcrCloud__Host
              value: "xxxxxxxxx"
            - name: AcrCloud__AccessKey
              value: "xxxxxxxxx"
            - name: AcrCloud__AccessSecret
              value: "xxxxxxxxx"
            - name: AbstractApi__ApiKey
              value: "xxxxxxxxx"
            - name: ASPNETCORE_ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: ASPNETCORE_ENVIRONMENT
            - name: ASPNETCORE_URLS
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: ASPNETCORE_URLS
            - name: XTargetId
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: aws.region
            - name: AWS__bucket_name
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: aws.bucket
            - name: EnvironmentType
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: environmentType
            - name: InAppPurchases__GoogleApiKeyBase64
              valueFrom:
                secretKeyRef:
                  name: ssm-secrets
                  key: google.apiKey
            - name: InAppPurchases__IsProduction
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: inAppPurchases.isProduction
            - name: JAEGER_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: jaeger.endpoint
            - name: JAEGER_REPORTER_LOG_SPANS
              value: "false"
            - name: JAEGER_REPORTER_MAX_QUEUE_SIZE
              value: "100000"
            - name: JAEGER_SERVICE_NAME
              value: {{ .Release.Namespace }}.{{ .Service }}
            - name: JAEGER_SAMPLER_TYPE
              value: "const"
            - name: JAEGER_SAMPLER_PARAM
              value: "1"
            - name: JAEGER_TRACEID_128BIT
              value: "false"
            - name: JAEGER_SENDER_FACTORY
              value: "thrift"
            - name: OTEL_DOTNET_EXPERIMENTAL_ASPNETCORE_DISABLE_URL_QUERY_REDACTION
              value: "true"
            - name: OTEL_DOTNET_EXPERIMENTAL_HTTPCLIENT_DISABLE_URL_QUERY_REDACTION
              value: "true"
            - name: JAEGER_ENABLE
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: jaeger.enable
            - name: JAEGER_DETAILED_TRACING
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: jaeger.detailed
            - name: BasePath
              value: "/{{ .Values.apiIdentifier }}/{{ .Service }}"
            - name: Redis__ConnectionString
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: redis.host
            - name: Redis__ClientIdentifier
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ConnectionStrings__MainDbWritable
              valueFrom:
                secretKeyRef:
                  name: ssm-secrets
                  key: cs.main
            - name: ConnectionStrings__MainDbReadReplica
              valueFrom:
                secretKeyRef:
                  name: ssm-secrets
                  key: cs.main.replica
            - name: ConnectionStrings__AuthDbWritable
              valueFrom:
                secretKeyRef:
                  name: ssm-secrets
                  key: cs.auth
            - name: ServiceDiscovery__Asset
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: svc.asset
            - name: ServiceDiscovery__Auth
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: svc.auth
            - name: ServiceDiscovery__Client
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: svc.client
            - name: ServiceDiscovery__Main
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: svc.main
            - name: ServiceDiscovery__Notification
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: svc.notification
            - name: ServiceDiscovery__Video
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: svc.video
            - name: ServiceDiscovery__VideoFeed
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: svc.videoFeed
            - name: ServiceDiscovery__MachineLearning
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: svc.machineLearning
            - name: ServiceDiscovery__Chat
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: svc.chat
            - name: RateLimit__Enabled
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: ratelimit.enabled
            - name: RateLimit__FreverVideoAndAssetDownload
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: ratelimit.freverVideoAndAssetDownload
            - name: RateLimit__SevenDigitalSongDownload
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: ratelimit.sevenDigitalSongDownload
            - name: RateLimit__HardLimitPerUserPerHour
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: ratelimit.hardLimitPerUserPerHour
            - name: Blokur__ApiToken
              valueFrom:
                secretKeyRef:
                  name: ssm-secrets
                  key: blokur.apiToken
            - name: Blokur__SevenDigitalProviderIdentifier
              value: "123456"
            - name: Blokur__TempFolder
              value: "/tmp/"
            - name: ModerationProviderApiSettings__HiveTextModerationKey
              valueFrom:
                secretKeyRef:
                  name: ssm-secrets
                  key: hive.text.moderation.key
            - name: ModerationProviderApiSettings__HiveVisualModerationKey
              valueFrom:
                secretKeyRef:
                  name: ssm-secrets
                  key: hive.visual.moderation.key
            - name: AppsFlyerSettings__AppleAppId
              value: "xxxxxxxxx"
            - name: AppsFlyerSettings__AndroidAppId
              value: "xxxxxxxxx"
            - name: AppsFlyerSettings__Token
              valueFrom:
                secretKeyRef:
                  name: ssm-secrets
                  key: appsFlyer.token
            - name: SnsMessagingSettings__VideoTemplateMappingTopicArn
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: sns.videoTemplateMappingTopicArn
            - name: SnsMessagingSettings__GroupChangedTopicArn
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: sns.groupChangedTopicArn
            - name: SnsMessagingSettings__TemplateUpdatedTopicArn
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: sns.templateUpdatedTopicArn
            - name: SnsMessagingSettings__GroupDeletedTopicArn
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: sns.groupDeletedTopicArn
            - name: SnsMessagingSettings__VideoUnlikedTopicArn
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: sns.videoUnlikedTopicArn
            - name: SnsMessagingSettings__GroupUnfollowedTopicArn
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: sns.groupUnfollowedTopicArn
            - name: SnsMessagingSettings__GroupFollowedTopicArn
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: sns.groupFollowedTopicArn
            - name: SnsMessagingSettings__OutfitChangedTopicArn
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: sns.outfitChangedTopicArn
            - name: AI__StableDiffusionApiKey
              valueFrom:
                secretKeyRef:
                  name: ssm-secrets
                  key: stableDiffusion.apiKey
            - name: AI__ReplicateApiKey
              valueFrom:
                secretKeyRef:
                  name: ssm-secrets
                  key: replicate.apiKey
            - name: AI__KlingAccessKey
              valueFrom:
                secretKeyRef:
                  name: ssm-secrets
                  key: kling.accessKey
            - name: AI__KlingSecretKey
              valueFrom:
                secretKeyRef:
                  name: ssm-secrets
                  key: kling.secretKey
            - name: AI__PixVerseApiKey
              valueFrom:
                secretKeyRef:
                  name: ssm-secrets
                  key: pixVerse.apiKey
            - name: ComfyUiApiSettings__QueueUrl
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: comfyUi.queueUrl
            - name: ComfyUiApiSettings__ResponseQueueUrl
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: comfyUi.responseQueueUrl
            - name: ContentGenerationOptions__ApiKeySalt
              value: "iM6AGaHSiKiguVMCt6Crqw=="
            - name: ContentGenerationOptions__ApiKeyHash
              value: "sbPaew2g6inzBdP5Epzw2xbTg8gBf0LYFjMUyi8cN9A="
            - name: CloudFrontCertKeyPairId
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: cdn.certificateKeyPairId
            - name: CloudFrontCertPrivateKey
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: cdn.certificatePrivateKey
            - name: CloudFrontDistributionId
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: cdn.distributionId
            - name: CloudFrontHost
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: cdn.domain
            - name: CloudFrontSignedCookieLifetimeMinutes
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: cdn.urlSignatureLifetimeMin
            - name: AssetCopying__AssetCopyingQueueUrl
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: aws.queue
            - name: AssetCopying__BucketName
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: aws.bucket
            - name: AppStoreApi__IssuerId
              valueFrom:
                secretKeyRef:
                  name: ssm-secrets
                  key: appStore.issuerId
            - name: AppStoreApi__SharedSecret
              valueFrom:
                secretKeyRef:
                  name: ssm-secrets
                  key: appStore.sharedSecret
            - name: AppStoreApi__KeyId
              valueFrom:
                secretKeyRef:
                  name: ssm-secrets
                  key: appStore.keyId
            - name: AppStoreApi__KeyDataBase64
              valueFrom:
                secretKeyRef:
                  name: ssm-secrets
                  key: appStore.keyData
{{- end }}
