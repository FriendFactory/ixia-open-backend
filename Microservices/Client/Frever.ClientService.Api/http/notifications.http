# Works together with Frever.Impersonate CLI util to generate tokens.
# Supports both local and remote environment
@version=latest
@env=dev-1

@auth_server=https://{{env}}.frever-api.com/{{version}}/auth/
@asset_server=https://{{env}}.frever-api.com/{{version}}/asset/
@admin_server=https://{{env}}.frever-api.com/{{version}}/admin/
@client_server=https://{{env}}.frever-api.com/{{version}}/client/
@video_server=https://{{env}}.frever-api.com/{{version}}/video/
@notification_server=https://{{env}}.frever-api.com/{{version}}/notification/
@token=xxxxxxxxx

###
@auth_server=http://localhost:5002/
@asset_server=http://localhost:5004/file-storage/
@admin_server=http://localhost:5010/admin/
@client_server=http://localhost:5011/client/
@video_server=http://localhost:5005/video/
@notification_server=http://localhost:5008/notification/
@token_dev_16=xxxxxxxxx
@token_dev_2725=xxxxxxxxx
@token_stage_32312=xxxxxxxxx
@token={{token_stage_32312}}

### READING
GET {{notification_server}}api/notifications
Authorization: Bearer {{token}}

### MARKING AS READ
PUT {{notification_server}}api/notifications/mark-as-read
Authorization: Bearer {{token}}
Content-Type: application/json

[
  628
]


#### ADDING
###
POST {{notification_server}}api/notifications/newfollower
Authorization: Bearer {{token}}
Content-Type:  application/json

{
  "followerGroupId": 393
}

###
POST {{notification_server}}api/notifications/newvideo
Authorization: Bearer {{token}}
Content-Type:  application/json

{
  "videoId": 1840
}


###
POST {{notification_server}}api/notifications/newvideo
Authorization: Bearer {{token}}
Content-Type:  application/json

{
  "videoId": 1840
}