<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Create Levels" enabled="true">
      <stringProp name="TestPlan.comments">Logins with several accounts</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="auth-server" elementType="Argument">
            <stringProp name="Argument.name">auth-server</stringProp>
            <stringProp name="Argument.value">auth-content-stage.frever-api.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="http.connectTimeout" elementType="Argument">
            <stringProp name="Argument.name">http.connectTimeout</stringProp>
            <stringProp name="Argument.value">30000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="http.responseTimeout" elementType="Argument">
            <stringProp name="Argument.name">http.responseTimeout</stringProp>
            <stringProp name="Argument.value">600000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="threads" elementType="Argument">
            <stringProp name="Argument.name">threads</stringProp>
            <stringProp name="Argument.value">${__P(threads,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="iterations" elementType="Argument">
            <stringProp name="Argument.name">iterations</stringProp>
            <stringProp name="Argument.value">${__P(iterations,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="${__machineIP()}_Create Leves" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${iterations}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${threads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Logins CSV" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">Logins.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">login,password</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] Login ${login}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${login}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">Server</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
              </elementProp>
              <elementProp name="scope" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">friends_factory.creators_api</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">scope</stringProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">g&apos;KpB#[_(&lt;KP;Et25]a__J*mh;?(=h%NPd(&apos;=Z9KpC2xQ.F-E5{Sd&gt;*AtK!t!t9-_Zq9-{.r</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${auth-server}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/connect/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
          <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract Token" enabled="true">
            <stringProp name="VAR">token</stringProp>
            <stringProp name="JSONPATH">access_token</stringProp>
            <stringProp name="DEFAULT"></stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract Raw Main Server URL from JSON" enabled="true">
            <stringProp name="VAR">main-server-raw</stringProp>
            <stringProp name="JSONPATH">server_url</stringProp>
            <stringProp name="DEFAULT"></stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract Main Server URL" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">main-server</stringProp>
            <stringProp name="RegexExtractor.regex">https?\:\/\/(.*)\/</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="Sample.scope">variable</stringProp>
            <stringProp name="Scope.variable">main-server-raw</stringProp>
          </RegexExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract Raw Asset Server URL from JSON" enabled="true">
            <stringProp name="VAR">asset-server-raw</stringProp>
            <stringProp name="JSONPATH">asset_server</stringProp>
            <stringProp name="DEFAULT"></stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract Asset Server URL" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">asset-server</stringProp>
            <stringProp name="RegexExtractor.regex">https?\:\/\/(.*)\/</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="Sample.scope">variable</stringProp>
            <stringProp name="Scope.variable">asset-server-raw</stringProp>
          </RegexExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract Raw Video Server URL from JSON" enabled="true">
            <stringProp name="VAR">video-server-raw</stringProp>
            <stringProp name="JSONPATH">video_server</stringProp>
            <stringProp name="DEFAULT"></stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract Video Server URL" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">video-server</stringProp>
            <stringProp name="RegexExtractor.regex">https?\:\/\/(.*)\/</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="Sample.scope">variable</stringProp>
            <stringProp name="Scope.variable">video-server-raw</stringProp>
          </RegexExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract Raw Social Server URL from JSON" enabled="true">
            <stringProp name="VAR">social-server-raw</stringProp>
            <stringProp name="JSONPATH">social_server</stringProp>
            <stringProp name="DEFAULT"></stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract Social Server URL" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">social-server</stringProp>
            <stringProp name="RegexExtractor.regex">https?\:\/\/(.*)\/</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="Sample.scope">variable</stringProp>
            <stringProp name="Scope.variable">social-server-raw</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Parse JWT Payload" enabled="true">
          <stringProp name="BeanShellSampler.query">import org.apache.commons.codec.binary.Base64;

//jwt_token is the variable declared in user defined variables
//generally we can get the corrlated value instead of jwt_token
String response = vars.get(&quot;token&quot;);
String[] arr=response.split(&quot;\\.&quot;);
String actualvalue=arr[1].replaceAll(&quot;-&quot;,&quot;+&quot;);
actualvalue=actualvalue.replaceAll(&quot;_&quot;,&quot;/&quot;);
byte[] decoded_response = Base64.decodeBase64(actualvalue);
// inserting decoded JWT token into B_IdToken
vars.put(&quot;B_IdToken&quot;,new String(decoded_response));
log.info(new String(decoded_response));</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract PrimaryGroupId" enabled="true">
            <stringProp name="VAR">primary-group-id</stringProp>
            <stringProp name="JSONPATH">PrimaryGroupId</stringProp>
            <stringProp name="DEFAULT"></stringProp>
            <stringProp name="VARIABLE">B_IdToken</stringProp>
            <stringProp name="SUBJECT">VAR</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[CL] Upload Event 1 CameraAnimation" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[CL] Get Upload URL" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Authorization Header" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] GET Upload URL" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${asset-server}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/File/PreUploadingUrl</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
              <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract Url" enabled="true">
                <stringProp name="VAR">event1-cameraAnimation-uploadUrl</stringProp>
                <stringProp name="JSONPATH">uploadUrl</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
                <stringProp name="INPUT_FORMAT">JSON</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract UploadID" enabled="true">
                <stringProp name="VAR">event1-cameraAnimation-uploadId</stringProp>
                <stringProp name="JSONPATH">uploadId</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
                <stringProp name="INPUT_FORMAT">JSON</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] POST File data" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="CreateLevels.Files/Event1_CameraAnimation.txt" elementType="HTTPFileArg">
                  <stringProp name="File.path">CreateLevels.Files/Event1_CameraAnimation.txt</stringProp>
                  <stringProp name="File.paramname"></stringProp>
                  <stringProp name="File.mimetype"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${event1-cameraAnimation-uploadUrl}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
            <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[CL] Upload Event 1 Voice Track" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[CL] Get Upload URL" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Authorization Header" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] GET Upload URL" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${asset-server}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/File/PreUploadingUrl</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
              <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract Url" enabled="true">
                <stringProp name="VAR">event1-voiceTrack-uploadUrl</stringProp>
                <stringProp name="JSONPATH">uploadUrl</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
                <stringProp name="INPUT_FORMAT">JSON</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract UploadID" enabled="true">
                <stringProp name="VAR">event1-voiceTrack-uploadId</stringProp>
                <stringProp name="JSONPATH">uploadId</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
                <stringProp name="INPUT_FORMAT">JSON</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] POST File data" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="CreateLevels.Files/Event1_VoiceTrack.bin" elementType="HTTPFileArg">
                  <stringProp name="File.path">CreateLevels.Files/Event1_VoiceTrack.bin</stringProp>
                  <stringProp name="File.paramname"></stringProp>
                  <stringProp name="File.mimetype"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${event1-voiceTrack-uploadUrl}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
            <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[CL] Upload Event 1 Thumb 512" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[CL] Get Upload URL" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Authorization Header" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] GET Upload URL" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${asset-server}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/File/PreUploadingUrl</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
              <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract Url" enabled="true">
                <stringProp name="VAR">event1-thumb512-uploadUrl</stringProp>
                <stringProp name="JSONPATH">uploadUrl</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
                <stringProp name="INPUT_FORMAT">JSON</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract UploadID" enabled="true">
                <stringProp name="VAR">event1-thumb512-uploadId</stringProp>
                <stringProp name="JSONPATH">uploadId</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
                <stringProp name="INPUT_FORMAT">JSON</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] POST File data" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="CreateLevels.Files/Event1_Thumb_512.png" elementType="HTTPFileArg">
                  <stringProp name="File.path">CreateLevels.Files/Event1_Thumb_512.png</stringProp>
                  <stringProp name="File.paramname"></stringProp>
                  <stringProp name="File.mimetype"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${event1-thumb512-uploadUrl}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
            <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[CL] Upload Event 1 Thumb 128" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[CL] Get Upload URL" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Authorization Header" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] GET Upload URL" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${asset-server}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/File/PreUploadingUrl</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
              <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract Url" enabled="true">
                <stringProp name="VAR">event1-thumb128-uploadUrl</stringProp>
                <stringProp name="JSONPATH">uploadUrl</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
                <stringProp name="INPUT_FORMAT">JSON</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract UploadID" enabled="true">
                <stringProp name="VAR">event1-thumb128-uploadId</stringProp>
                <stringProp name="JSONPATH">uploadId</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
                <stringProp name="INPUT_FORMAT">JSON</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] POST File data" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="CreateLevels.Files/Event1_Thumb_128.png" elementType="HTTPFileArg">
                  <stringProp name="File.path">CreateLevels.Files/Event1_Thumb_128.png</stringProp>
                  <stringProp name="File.paramname"></stringProp>
                  <stringProp name="File.mimetype"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${event1-thumb128-uploadUrl}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
            <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[CL] Upload Event 2 CameraAnimation" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[CL] Get Upload URL" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Authorization Header" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] GET Upload URL" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${asset-server}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/File/PreUploadingUrl</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
              <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract Url" enabled="true">
                <stringProp name="VAR">event2-cameraAnimation-uploadUrl</stringProp>
                <stringProp name="JSONPATH">uploadUrl</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
                <stringProp name="INPUT_FORMAT">JSON</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract UploadID" enabled="true">
                <stringProp name="VAR">event2-cameraAnimation-uploadId</stringProp>
                <stringProp name="JSONPATH">uploadId</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
                <stringProp name="INPUT_FORMAT">JSON</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] POST File data" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="CreateLevels.Files/Event2_CameraAnimation.txt" elementType="HTTPFileArg">
                  <stringProp name="File.path">CreateLevels.Files/Event2_CameraAnimation.txt</stringProp>
                  <stringProp name="File.paramname"></stringProp>
                  <stringProp name="File.mimetype"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${event2-cameraAnimation-uploadUrl}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
            <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[CL] Upload Event 2 Voice Track" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[CL] Get Upload URL" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Authorization Header" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] GET Upload URL" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${asset-server}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/File/PreUploadingUrl</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
              <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract Url" enabled="true">
                <stringProp name="VAR">event2-voiceTrack-uploadUrl</stringProp>
                <stringProp name="JSONPATH">uploadUrl</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
                <stringProp name="INPUT_FORMAT">JSON</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract UploadID" enabled="true">
                <stringProp name="VAR">event2-voiceTrack-uploadId</stringProp>
                <stringProp name="JSONPATH">uploadId</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
                <stringProp name="INPUT_FORMAT">JSON</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] POST File data" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="CreateLevels.Files/Event2_VoiceTrack.bin" elementType="HTTPFileArg">
                  <stringProp name="File.path">CreateLevels.Files/Event2_VoiceTrack.bin</stringProp>
                  <stringProp name="File.paramname"></stringProp>
                  <stringProp name="File.mimetype"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${event2-voiceTrack-uploadUrl}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
            <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[CL] Upload Event 2 Thumb 512" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[CL] Get Upload URL" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Authorization Header" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] GET Upload URL" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${asset-server}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/File/PreUploadingUrl</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
              <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract Url" enabled="true">
                <stringProp name="VAR">event2-thumb512-uploadUrl</stringProp>
                <stringProp name="JSONPATH">uploadUrl</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
                <stringProp name="INPUT_FORMAT">JSON</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract UploadID" enabled="true">
                <stringProp name="VAR">event2-thumb512-uploadId</stringProp>
                <stringProp name="JSONPATH">uploadId</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
                <stringProp name="INPUT_FORMAT">JSON</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] POST File data" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="CreateLevels.Files/Event2_Thumb_512.png" elementType="HTTPFileArg">
                  <stringProp name="File.path">CreateLevels.Files/Event2_Thumb_512.png</stringProp>
                  <stringProp name="File.paramname"></stringProp>
                  <stringProp name="File.mimetype"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${event2-thumb512-uploadUrl}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
            <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[CL] Upload Event 2 Thumb 128" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[CL] Get Upload URL" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Authorization Header" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] GET Upload URL" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${asset-server}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/File/PreUploadingUrl</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
              <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract Url" enabled="true">
                <stringProp name="VAR">event2-thumb128-uploadUrl</stringProp>
                <stringProp name="JSONPATH">uploadUrl</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
                <stringProp name="INPUT_FORMAT">JSON</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract UploadID" enabled="true">
                <stringProp name="VAR">event2-thumb128-uploadId</stringProp>
                <stringProp name="JSONPATH">uploadId</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
                <stringProp name="INPUT_FORMAT">JSON</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] POST File data" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="CreateLevels.Files/Event2_Thumb_128.png" elementType="HTTPFileArg">
                  <stringProp name="File.path">CreateLevels.Files/Event2_Thumb_128.png</stringProp>
                  <stringProp name="File.paramname"></stringProp>
                  <stringProp name="File.mimetype"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${event2-thumb128-uploadUrl}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
            <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[CL] Upload Event 3 CameraAnimation" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[CL] Get Upload URL" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Authorization Header" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] GET Upload URL" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${asset-server}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/File/PreUploadingUrl</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
              <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract Url" enabled="true">
                <stringProp name="VAR">event3-cameraAnimation-uploadUrl</stringProp>
                <stringProp name="JSONPATH">uploadUrl</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
                <stringProp name="INPUT_FORMAT">JSON</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract UploadID" enabled="true">
                <stringProp name="VAR">event3-cameraAnimation-uploadId</stringProp>
                <stringProp name="JSONPATH">uploadId</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
                <stringProp name="INPUT_FORMAT">JSON</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] POST File data" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="CreateLevels.Files/Event3_CameraAnimation.txt" elementType="HTTPFileArg">
                  <stringProp name="File.path">CreateLevels.Files/Event3_CameraAnimation.txt</stringProp>
                  <stringProp name="File.paramname"></stringProp>
                  <stringProp name="File.mimetype"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${event3-cameraAnimation-uploadUrl}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
            <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[CL] Upload Event 3 Voice Track" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[CL] Get Upload URL" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Authorization Header" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] GET Upload URL" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${asset-server}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/File/PreUploadingUrl</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
              <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract Url" enabled="true">
                <stringProp name="VAR">event3-voiceTrack-uploadUrl</stringProp>
                <stringProp name="JSONPATH">uploadUrl</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
                <stringProp name="INPUT_FORMAT">JSON</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract UploadID" enabled="true">
                <stringProp name="VAR">event3-voiceTrack-uploadId</stringProp>
                <stringProp name="JSONPATH">uploadId</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
                <stringProp name="INPUT_FORMAT">JSON</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] POST File data" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="CreateLevels.Files/Event3_VoiceTrack.bin" elementType="HTTPFileArg">
                  <stringProp name="File.path">CreateLevels.Files/Event3_VoiceTrack.bin</stringProp>
                  <stringProp name="File.paramname"></stringProp>
                  <stringProp name="File.mimetype"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${event3-voiceTrack-uploadUrl}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
            <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[CL] Upload Event 3 Thumb 512" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[CL] Get Upload URL" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Authorization Header" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] GET Upload URL" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${asset-server}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/File/PreUploadingUrl</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
              <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract Url" enabled="true">
                <stringProp name="VAR">event3-thumb512-uploadUrl</stringProp>
                <stringProp name="JSONPATH">uploadUrl</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
                <stringProp name="INPUT_FORMAT">JSON</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract UploadID" enabled="true">
                <stringProp name="VAR">event3-thumb512-uploadId</stringProp>
                <stringProp name="JSONPATH">uploadId</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
                <stringProp name="INPUT_FORMAT">JSON</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] POST File data" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="CreateLevels.Files/Event3_Thumb_512.png" elementType="HTTPFileArg">
                  <stringProp name="File.path">CreateLevels.Files/Event3_Thumb_512.png</stringProp>
                  <stringProp name="File.paramname"></stringProp>
                  <stringProp name="File.mimetype"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${event3-thumb512-uploadUrl}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
            <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[CL] Upload Event 3 Thumb 128" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[CL] Get Upload URL" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Authorization Header" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] GET Upload URL" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${asset-server}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/File/PreUploadingUrl</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
              <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract Url" enabled="true">
                <stringProp name="VAR">event3-thumb128-uploadUrl</stringProp>
                <stringProp name="JSONPATH">uploadUrl</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
                <stringProp name="INPUT_FORMAT">JSON</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract UploadID" enabled="true">
                <stringProp name="VAR">event3-thumb128-uploadId</stringProp>
                <stringProp name="JSONPATH">uploadId</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
                <stringProp name="INPUT_FORMAT">JSON</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] POST File data" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="CreateLevels.Files/Event3_Thumb_128.png" elementType="HTTPFileArg">
                  <stringProp name="File.path">CreateLevels.Files/Event3_Thumb_128.png</stringProp>
                  <stringProp name="File.paramname"></stringProp>
                  <stringProp name="File.mimetype"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${event3-thumb128-uploadUrl}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
            <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[CL] Load Characters" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Authorization Header" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] GET Characters" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${main-server}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/Character/my</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
            <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract Character ID" enabled="true">
              <stringProp name="VAR">characterId</stringProp>
              <stringProp name="JSONPATH">$[0].id</stringProp>
              <stringProp name="DEFAULT"></stringProp>
              <stringProp name="VARIABLE"></stringProp>
              <stringProp name="SUBJECT">BODY</stringProp>
              <stringProp name="INPUT_FORMAT">JSON</stringProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[CL] Create Level" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Authorization And Content-Type Headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[CL] POST Level" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: 0,&#xd;
    &quot;groupId&quot;: ${primary-group-id},&#xd;
    &quot;originalGroupId&quot;: ${primary-group-id},&#xd;
    &quot;createdTime&quot;: &quot;0001-01-01T00:00:00&quot;,&#xd;
    &quot;modifiedTime&quot;: &quot;0001-01-01T00:00:00&quot;,&#xd;
    &quot;levelTemplateId&quot;: 2,&#xd;
    &quot;verticalCategoryId&quot;: 1,&#xd;
    &quot;languageId&quot;: 1,&#xd;
    &quot;remixedFromLevelId&quot;: null,&#xd;
    &quot;isDeleted&quot;: false,&#xd;
    &quot;isDraft&quot;: false,&#xd;
    &quot;group&quot;: null,&#xd;
    &quot;language&quot;: null,&#xd;
    &quot;levelTemplate&quot;: null,&#xd;
    &quot;originalGroup&quot;: null,&#xd;
    &quot;remixedFromLevel&quot;: null,&#xd;
    &quot;verticalCategory&quot;: null,&#xd;
    &quot;event&quot;: [&#xd;
        {&#xd;
            &quot;id&quot;: 0,&#xd;
            &quot;groupId&quot;: 0,&#xd;
            &quot;createdTime&quot;: &quot;0001-01-01T00:00:00&quot;,&#xd;
            &quot;modifiedTime&quot;: &quot;0001-01-01T00:00:00&quot;,&#xd;
            &quot;levelId&quot;: 0,&#xd;
            &quot;levelSequence&quot;: 1,&#xd;
            &quot;autoclipId&quot;: null,&#xd;
            &quot;targetCharacterSequenceNumber&quot;: 0,&#xd;
            &quot;filesInfo&quot;: null,&#xd;
            &quot;length&quot;: 2216,&#xd;
            &quot;characterSpawnPositionId&quot;: 434,&#xd;
            &quot;characterSpawnPositionFormationId&quot;: 1,&#xd;
            &quot;autoclip&quot;: null,&#xd;
            &quot;characterSpawnPosition&quot;: null,&#xd;
            &quot;characterSpawnPositionFormation&quot;: null,&#xd;
            &quot;group&quot;: null,&#xd;
            &quot;level&quot;: null,&#xd;
            &quot;cameraController&quot;: [&#xd;
                {&#xd;
                    &quot;id&quot;: 0,&#xd;
                    &quot;eventId&quot;: 0,&#xd;
                    &quot;controllerSequenceNumber&quot;: 0,&#xd;
                    &quot;activationCue&quot;: 0,&#xd;
                    &quot;endCue&quot;: 0,&#xd;
                    &quot;cameraAnimationTemplateId&quot;: 42,&#xd;
                    &quot;spawnIndex&quot;: 0,&#xd;
                    &quot;startDepthOfFieldOffset&quot;: 65000,&#xd;
                    &quot;endDepthOfFieldOffset&quot;: 0,&#xd;
                    &quot;startFocusDistance&quot;: 0,&#xd;
                    &quot;endFocusDistance&quot;: 0,&#xd;
                    &quot;followSpawnPositionIndex&quot;: null,&#xd;
                    &quot;followAll&quot;: true,&#xd;
                    &quot;lookAtIndex&quot;: 1,&#xd;
                    &quot;cameraNoiseSettingsIndex&quot;: 0,&#xd;
                    &quot;autoFocus&quot;: false,&#xd;
                    &quot;autoRoll&quot;: false,&#xd;
                    &quot;followZoom&quot;: false,&#xd;
                    &quot;cameraAnimationId&quot;: null,&#xd;
                    &quot;cameraAnimation&quot;: {&#xd;
                        &quot;id&quot;: 0,&#xd;
                        &quot;groupId&quot;: 0,&#xd;
                        &quot;createdTime&quot;: &quot;0001-01-01T00:00:00&quot;,&#xd;
                        &quot;modifiedTime&quot;: &quot;0001-01-01T00:00:00&quot;,&#xd;
                        &quot;filesInfo&quot;: null,&#xd;
                        &quot;group&quot;: null,&#xd;
                        &quot;cameraAnimationTemplate&quot;: null,&#xd;
                        &quot;cameraController&quot;: [],&#xd;
                        &quot;files&quot;: [&#xd;
                            {&#xd;
                                &quot;file&quot;: 0,&#xd;
                                &quot;resolution&quot;: null,&#xd;
                                &quot;source&quot;: {&#xd;
                                    &quot;uploadId&quot;: &quot;${event1-cameraAnimation-uploadId}&quot;,&#xd;
                                    &quot;copyFrom&quot;: null&#xd;
                                },&#xd;
                                &quot;version&quot;: null,&#xd;
                                &quot;extension&quot;: 6&#xd;
                            }&#xd;
                        ]&#xd;
                    },&#xd;
                    &quot;cameraAnimationTemplate&quot;: null,&#xd;
                    &quot;event&quot;: null&#xd;
                }&#xd;
            ],&#xd;
            &quot;cameraFilterController&quot;: [],&#xd;
            &quot;characterController&quot;: [&#xd;
                {&#xd;
                    &quot;id&quot;: 0,&#xd;
                    &quot;eventId&quot;: 0,&#xd;
                    &quot;controllerSequenceNumber&quot;: 0,&#xd;
                    &quot;characterId&quot;: ${characterId},&#xd;
                    &quot;activationCue&quot;: 0,&#xd;
                    &quot;endCue&quot;: 0,&#xd;
                    &quot;rotation&quot;: 0,&#xd;
                    &quot;outfitId&quot;: null,&#xd;
                    &quot;character&quot;: null,&#xd;
                    &quot;event&quot;: null,&#xd;
                    &quot;outfit&quot;: null,&#xd;
                    &quot;characterControllerBackgroundDancer&quot;: null,&#xd;
                    &quot;characterControllerBodyAnimation&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: 0,&#xd;
                            &quot;characterControllerId&quot;: 0,&#xd;
                            &quot;controllerSequenceNumber&quot;: 0,&#xd;
                            &quot;primaryBodyAnimationId&quot;: 66,&#xd;
                            &quot;lowerBodyAnimationId&quot;: null,&#xd;
                            &quot;animationSpeed&quot;: 0,&#xd;
                            &quot;activationCue&quot;: 4067,&#xd;
                            &quot;endCue&quot;: 6283,&#xd;
                            &quot;locomotion&quot;: false,&#xd;
                            &quot;looping&quot;: false,&#xd;
                            &quot;characterController&quot;: null,&#xd;
                            &quot;lowerBodyAnimation&quot;: null,&#xd;
                            &quot;primaryBodyAnimation&quot;: null&#xd;
                        }&#xd;
                    ],&#xd;
                    &quot;characterControllerFaceVoice&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: 0,&#xd;
                            &quot;characterControllerId&quot;: 0,&#xd;
                            &quot;controllerSequenceNumber&quot;: 0,&#xd;
                            &quot;voiceTrackId&quot;: null,&#xd;
                            &quot;faceAnimationId&quot;: null,&#xd;
                            &quot;voiceFilterId&quot;: 7,&#xd;
                            &quot;activationCue&quot;: 0,&#xd;
                            &quot;endCue&quot;: 0,&#xd;
                            &quot;extremeExpressionId&quot;: null,&#xd;
                            &quot;faceVfxId&quot;: null,&#xd;
                            &quot;voiceSoundVolume&quot;: 100,&#xd;
                            &quot;characterController&quot;: null,&#xd;
                            &quot;extremeExpression&quot;: null,&#xd;
                            &quot;faceAnimation&quot;: null,&#xd;
                            &quot;faceVfx&quot;: null,&#xd;
                            &quot;voiceFilter&quot;: null,&#xd;
                            &quot;voiceTrack&quot;: {&#xd;
                                &quot;files&quot;: [&#xd;
                                    {&#xd;
                                        &quot;file&quot;: 0,&#xd;
                                        &quot;resolution&quot;: null,&#xd;
                                        &quot;source&quot;: {&#xd;
                                            &quot;uploadId&quot;: &quot;${event1-voiceTrack-uploadId}&quot;,&#xd;
                                            &quot;copyFrom&quot;: null&#xd;
                                        },&#xd;
                                        &quot;version&quot;: null,&#xd;
                                        &quot;extension&quot;: 3&#xd;
                                    }&#xd;
                                ],&#xd;
                                &quot;id&quot;: 0,&#xd;
                                &quot;assetStoreInfoId&quot;: null,&#xd;
                                &quot;languageId&quot;: 1,&#xd;
                                &quot;groupId&quot;: 1,&#xd;
                                &quot;createdTime&quot;: &quot;0001-01-01T00:00:00&quot;,&#xd;
                                &quot;modifiedTime&quot;: &quot;0001-01-01T00:00:00&quot;,&#xd;
                                &quot;size&quot;: null,&#xd;
                                &quot;channels&quot;: null,&#xd;
                                &quot;samplingSize&quot;: null,&#xd;
                                &quot;duration&quot;: 0,&#xd;
                                &quot;samplingFrequency&quot;: null,&#xd;
                                &quot;filesInfo&quot;: null,&#xd;
                                &quot;assetStoreInfo&quot;: null,&#xd;
                                &quot;group&quot;: null,&#xd;
                                &quot;language&quot;: null,&#xd;
                                &quot;characterControllerFaceVoice&quot;: []&#xd;
                            }&#xd;
                        }&#xd;
                    ],&#xd;
                    &quot;characterControllerUmaRecipe&quot;: [],&#xd;
                    &quot;orderNumber&quot;: 0&#xd;
                }&#xd;
            ],&#xd;
            &quot;eventAndEventSpecialAssetbundle&quot;: null,&#xd;
            &quot;musicController&quot;: [],&#xd;
            &quot;propController&quot;: null,&#xd;
            &quot;setLocationController&quot;: [&#xd;
                {&#xd;
                    &quot;id&quot;: 0,&#xd;
                    &quot;eventId&quot;: 0,&#xd;
                    &quot;controllerSequenceNumber&quot;: 0,&#xd;
                    &quot;setLocationId&quot;: 206,&#xd;
                    &quot;activationCue&quot;: 7028,&#xd;
                    &quot;endCue&quot;: 9244,&#xd;
                    &quot;timeOfDay&quot;: null,&#xd;
                    &quot;weatherId&quot;: 1,&#xd;
                    &quot;crowdId&quot;: null,&#xd;
                    &quot;crowdMovementId&quot;: null,&#xd;
                    &quot;maxCrowds&quot;: null,&#xd;
                    &quot;timelapseSpeed&quot;: null,&#xd;
                    &quot;npeAnimationSpeed&quot;: null,&#xd;
                    &quot;videoClipId&quot;: null,&#xd;
                    &quot;photoId&quot;: null,&#xd;
                    &quot;videoActivationCue&quot;: null,&#xd;
                    &quot;videoEndCue&quot;: null,&#xd;
                    &quot;videoSoundVolume&quot;: 0,&#xd;
                    &quot;crowd&quot;: null,&#xd;
                    &quot;crowdMovement&quot;: null,&#xd;
                    &quot;event&quot;: null,&#xd;
                    &quot;setLocation&quot;: null,&#xd;
                    &quot;weather&quot;: null,&#xd;
                    &quot;videoClip&quot;: null,&#xd;
                    &quot;photo&quot;: null&#xd;
                }&#xd;
            ],&#xd;
            &quot;sfxController&quot;: null,&#xd;
            &quot;stickerController&quot;: null,&#xd;
            &quot;vfxController&quot;: [],&#xd;
            &quot;files&quot;: [&#xd;
                {&#xd;
                    &quot;file&quot;: 1,&#xd;
                    &quot;resolution&quot;: &quot;512x512&quot;,&#xd;
                    &quot;source&quot;: {&#xd;
                        &quot;uploadId&quot;: &quot;${event1-thumb512-uploadId}&quot;,&#xd;
                        &quot;copyFrom&quot;: null&#xd;
                    },&#xd;
                    &quot;version&quot;: null,&#xd;
                    &quot;extension&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;file&quot;: 1,&#xd;
                    &quot;resolution&quot;: &quot;128x128&quot;,&#xd;
                    &quot;source&quot;: {&#xd;
                        &quot;uploadId&quot;: &quot;${event1-thumb128-uploadId}&quot;,&#xd;
                        &quot;copyFrom&quot;: null&#xd;
                    },&#xd;
                    &quot;version&quot;: null,&#xd;
                    &quot;extension&quot;: 5&#xd;
                }&#xd;
            ],&#xd;
            &quot;orderNumber&quot;: 1&#xd;
        },&#xd;
        {&#xd;
            &quot;id&quot;: 0,&#xd;
            &quot;groupId&quot;: 0,&#xd;
            &quot;createdTime&quot;: &quot;0001-01-01T00:00:00&quot;,&#xd;
            &quot;modifiedTime&quot;: &quot;0001-01-01T00:00:00&quot;,&#xd;
            &quot;levelId&quot;: 0,&#xd;
            &quot;levelSequence&quot;: 2,&#xd;
            &quot;autoclipId&quot;: null,&#xd;
            &quot;targetCharacterSequenceNumber&quot;: 0,&#xd;
            &quot;filesInfo&quot;: null,&#xd;
            &quot;length&quot;: 2799,&#xd;
            &quot;characterSpawnPositionId&quot;: 478,&#xd;
            &quot;characterSpawnPositionFormationId&quot;: 1,&#xd;
            &quot;autoclip&quot;: null,&#xd;
            &quot;characterSpawnPosition&quot;: null,&#xd;
            &quot;characterSpawnPositionFormation&quot;: null,&#xd;
            &quot;group&quot;: null,&#xd;
            &quot;level&quot;: null,&#xd;
            &quot;cameraController&quot;: [&#xd;
                {&#xd;
                    &quot;id&quot;: 0,&#xd;
                    &quot;eventId&quot;: 0,&#xd;
                    &quot;controllerSequenceNumber&quot;: 0,&#xd;
                    &quot;activationCue&quot;: 0,&#xd;
                    &quot;endCue&quot;: 0,&#xd;
                    &quot;cameraAnimationTemplateId&quot;: 42,&#xd;
                    &quot;spawnIndex&quot;: 0,&#xd;
                    &quot;startDepthOfFieldOffset&quot;: 65000,&#xd;
                    &quot;endDepthOfFieldOffset&quot;: 0,&#xd;
                    &quot;startFocusDistance&quot;: 0,&#xd;
                    &quot;endFocusDistance&quot;: 0,&#xd;
                    &quot;followSpawnPositionIndex&quot;: null,&#xd;
                    &quot;followAll&quot;: true,&#xd;
                    &quot;lookAtIndex&quot;: 1,&#xd;
                    &quot;cameraNoiseSettingsIndex&quot;: 0,&#xd;
                    &quot;autoFocus&quot;: false,&#xd;
                    &quot;autoRoll&quot;: false,&#xd;
                    &quot;followZoom&quot;: false,&#xd;
                    &quot;cameraAnimationId&quot;: null,&#xd;
                    &quot;cameraAnimation&quot;: {&#xd;
                        &quot;id&quot;: 0,&#xd;
                        &quot;groupId&quot;: 0,&#xd;
                        &quot;createdTime&quot;: &quot;0001-01-01T00:00:00&quot;,&#xd;
                        &quot;modifiedTime&quot;: &quot;0001-01-01T00:00:00&quot;,&#xd;
                        &quot;filesInfo&quot;: null,&#xd;
                        &quot;group&quot;: null,&#xd;
                        &quot;cameraAnimationTemplate&quot;: null,&#xd;
                        &quot;cameraController&quot;: [],&#xd;
                        &quot;files&quot;: [&#xd;
                            {&#xd;
                                &quot;file&quot;: 0,&#xd;
                                &quot;resolution&quot;: null,&#xd;
                                &quot;source&quot;: {&#xd;
                                    &quot;uploadId&quot;: &quot;${event2-cameraAnimation-uploadId}&quot;,&#xd;
                                    &quot;copyFrom&quot;: null&#xd;
                                },&#xd;
                                &quot;version&quot;: null,&#xd;
                                &quot;extension&quot;: 6&#xd;
                            }&#xd;
                        ]&#xd;
                    },&#xd;
                    &quot;cameraAnimationTemplate&quot;: null,&#xd;
                    &quot;event&quot;: null&#xd;
                }&#xd;
            ],&#xd;
            &quot;cameraFilterController&quot;: [],&#xd;
            &quot;characterController&quot;: [&#xd;
                {&#xd;
                    &quot;id&quot;: 0,&#xd;
                    &quot;eventId&quot;: 0,&#xd;
                    &quot;controllerSequenceNumber&quot;: 0,&#xd;
                    &quot;characterId&quot;: ${characterId},&#xd;
                    &quot;activationCue&quot;: 0,&#xd;
                    &quot;endCue&quot;: 0,&#xd;
                    &quot;rotation&quot;: 0,&#xd;
                    &quot;outfitId&quot;: null,&#xd;
                    &quot;character&quot;: null,&#xd;
                    &quot;event&quot;: null,&#xd;
                    &quot;outfit&quot;: null,&#xd;
                    &quot;characterControllerBackgroundDancer&quot;: null,&#xd;
                    &quot;characterControllerBodyAnimation&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: 0,&#xd;
                            &quot;characterControllerId&quot;: 0,&#xd;
                            &quot;controllerSequenceNumber&quot;: 0,&#xd;
                            &quot;primaryBodyAnimationId&quot;: 66,&#xd;
                            &quot;lowerBodyAnimationId&quot;: null,&#xd;
                            &quot;animationSpeed&quot;: 0,&#xd;
                            &quot;activationCue&quot;: 6283,&#xd;
                            &quot;endCue&quot;: 9082,&#xd;
                            &quot;locomotion&quot;: false,&#xd;
                            &quot;looping&quot;: false,&#xd;
                            &quot;characterController&quot;: null,&#xd;
                            &quot;lowerBodyAnimation&quot;: null,&#xd;
                            &quot;primaryBodyAnimation&quot;: null&#xd;
                        }&#xd;
                    ],&#xd;
                    &quot;characterControllerFaceVoice&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: 0,&#xd;
                            &quot;characterControllerId&quot;: 0,&#xd;
                            &quot;controllerSequenceNumber&quot;: 0,&#xd;
                            &quot;voiceTrackId&quot;: null,&#xd;
                            &quot;faceAnimationId&quot;: null,&#xd;
                            &quot;voiceFilterId&quot;: 7,&#xd;
                            &quot;activationCue&quot;: 0,&#xd;
                            &quot;endCue&quot;: 0,&#xd;
                            &quot;extremeExpressionId&quot;: null,&#xd;
                            &quot;faceVfxId&quot;: null,&#xd;
                            &quot;voiceSoundVolume&quot;: 100,&#xd;
                            &quot;characterController&quot;: null,&#xd;
                            &quot;extremeExpression&quot;: null,&#xd;
                            &quot;faceAnimation&quot;: null,&#xd;
                            &quot;faceVfx&quot;: null,&#xd;
                            &quot;voiceFilter&quot;: null,&#xd;
                            &quot;voiceTrack&quot;: {&#xd;
                                &quot;files&quot;: [&#xd;
                                    {&#xd;
                                        &quot;file&quot;: 0,&#xd;
                                        &quot;resolution&quot;: null,&#xd;
                                        &quot;source&quot;: {&#xd;
                                            &quot;uploadId&quot;: &quot;${event2-voiceTrack-uploadId}&quot;,&#xd;
                                            &quot;copyFrom&quot;: null&#xd;
                                        },&#xd;
                                        &quot;version&quot;: null,&#xd;
                                        &quot;extension&quot;: 3&#xd;
                                    }&#xd;
                                ],&#xd;
                                &quot;id&quot;: 0,&#xd;
                                &quot;assetStoreInfoId&quot;: null,&#xd;
                                &quot;languageId&quot;: 1,&#xd;
                                &quot;groupId&quot;: 1,&#xd;
                                &quot;createdTime&quot;: &quot;0001-01-01T00:00:00&quot;,&#xd;
                                &quot;modifiedTime&quot;: &quot;0001-01-01T00:00:00&quot;,&#xd;
                                &quot;size&quot;: null,&#xd;
                                &quot;channels&quot;: null,&#xd;
                                &quot;samplingSize&quot;: null,&#xd;
                                &quot;duration&quot;: 0,&#xd;
                                &quot;samplingFrequency&quot;: null,&#xd;
                                &quot;filesInfo&quot;: null,&#xd;
                                &quot;assetStoreInfo&quot;: null,&#xd;
                                &quot;group&quot;: null,&#xd;
                                &quot;language&quot;: null,&#xd;
                                &quot;characterControllerFaceVoice&quot;: []&#xd;
                            }&#xd;
                        }&#xd;
                    ],&#xd;
                    &quot;characterControllerUmaRecipe&quot;: [],&#xd;
                    &quot;orderNumber&quot;: 0&#xd;
                }&#xd;
            ],&#xd;
            &quot;eventAndEventSpecialAssetbundle&quot;: null,&#xd;
            &quot;musicController&quot;: [],&#xd;
            &quot;propController&quot;: null,&#xd;
            &quot;setLocationController&quot;: [&#xd;
                {&#xd;
                    &quot;id&quot;: 0,&#xd;
                    &quot;eventId&quot;: 0,&#xd;
                    &quot;controllerSequenceNumber&quot;: 0,&#xd;
                    &quot;setLocationId&quot;: 228,&#xd;
                    &quot;activationCue&quot;: 4994,&#xd;
                    &quot;endCue&quot;: 7793,&#xd;
                    &quot;timeOfDay&quot;: null,&#xd;
                    &quot;weatherId&quot;: 1,&#xd;
                    &quot;crowdId&quot;: null,&#xd;
                    &quot;crowdMovementId&quot;: null,&#xd;
                    &quot;maxCrowds&quot;: null,&#xd;
                    &quot;timelapseSpeed&quot;: null,&#xd;
                    &quot;npeAnimationSpeed&quot;: null,&#xd;
                    &quot;videoClipId&quot;: null,&#xd;
                    &quot;photoId&quot;: null,&#xd;
                    &quot;videoActivationCue&quot;: null,&#xd;
                    &quot;videoEndCue&quot;: null,&#xd;
                    &quot;videoSoundVolume&quot;: 0,&#xd;
                    &quot;crowd&quot;: null,&#xd;
                    &quot;crowdMovement&quot;: null,&#xd;
                    &quot;event&quot;: null,&#xd;
                    &quot;setLocation&quot;: null,&#xd;
                    &quot;weather&quot;: null,&#xd;
                    &quot;videoClip&quot;: null,&#xd;
                    &quot;photo&quot;: null&#xd;
                }&#xd;
            ],&#xd;
            &quot;sfxController&quot;: null,&#xd;
            &quot;stickerController&quot;: null,&#xd;
            &quot;vfxController&quot;: [],&#xd;
            &quot;files&quot;: [&#xd;
                {&#xd;
                    &quot;file&quot;: 1,&#xd;
                    &quot;resolution&quot;: &quot;512x512&quot;,&#xd;
                    &quot;source&quot;: {&#xd;
                        &quot;uploadId&quot;: &quot;${event2-thumb512-uploadId}&quot;,&#xd;
                        &quot;copyFrom&quot;: null&#xd;
                    },&#xd;
                    &quot;version&quot;: null,&#xd;
                    &quot;extension&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;file&quot;: 1,&#xd;
                    &quot;resolution&quot;: &quot;128x128&quot;,&#xd;
                    &quot;source&quot;: {&#xd;
                        &quot;uploadId&quot;: &quot;${event2-thumb128-uploadId}&quot;,&#xd;
                        &quot;copyFrom&quot;: null&#xd;
                    },&#xd;
                    &quot;version&quot;: null,&#xd;
                    &quot;extension&quot;: 5&#xd;
                }&#xd;
            ],&#xd;
            &quot;orderNumber&quot;: 2&#xd;
        },&#xd;
        {&#xd;
            &quot;id&quot;: 0,&#xd;
            &quot;groupId&quot;: 0,&#xd;
            &quot;createdTime&quot;: &quot;0001-01-01T00:00:00&quot;,&#xd;
            &quot;modifiedTime&quot;: &quot;0001-01-01T00:00:00&quot;,&#xd;
            &quot;levelId&quot;: 0,&#xd;
            &quot;levelSequence&quot;: 3,&#xd;
            &quot;autoclipId&quot;: null,&#xd;
            &quot;targetCharacterSequenceNumber&quot;: 0,&#xd;
            &quot;filesInfo&quot;: null,&#xd;
            &quot;length&quot;: 3504,&#xd;
            &quot;characterSpawnPositionId&quot;: 422,&#xd;
            &quot;characterSpawnPositionFormationId&quot;: 1,&#xd;
            &quot;autoclip&quot;: null,&#xd;
            &quot;characterSpawnPosition&quot;: null,&#xd;
            &quot;characterSpawnPositionFormation&quot;: null,&#xd;
            &quot;group&quot;: null,&#xd;
            &quot;level&quot;: null,&#xd;
            &quot;cameraController&quot;: [&#xd;
                {&#xd;
                    &quot;id&quot;: 0,&#xd;
                    &quot;eventId&quot;: 0,&#xd;
                    &quot;controllerSequenceNumber&quot;: 0,&#xd;
                    &quot;activationCue&quot;: 0,&#xd;
                    &quot;endCue&quot;: 0,&#xd;
                    &quot;cameraAnimationTemplateId&quot;: 42,&#xd;
                    &quot;spawnIndex&quot;: 0,&#xd;
                    &quot;startDepthOfFieldOffset&quot;: 65000,&#xd;
                    &quot;endDepthOfFieldOffset&quot;: 0,&#xd;
                    &quot;startFocusDistance&quot;: 0,&#xd;
                    &quot;endFocusDistance&quot;: 0,&#xd;
                    &quot;followSpawnPositionIndex&quot;: null,&#xd;
                    &quot;followAll&quot;: true,&#xd;
                    &quot;lookAtIndex&quot;: 1,&#xd;
                    &quot;cameraNoiseSettingsIndex&quot;: 0,&#xd;
                    &quot;autoFocus&quot;: false,&#xd;
                    &quot;autoRoll&quot;: false,&#xd;
                    &quot;followZoom&quot;: false,&#xd;
                    &quot;cameraAnimationId&quot;: null,&#xd;
                    &quot;cameraAnimation&quot;: {&#xd;
                        &quot;id&quot;: 0,&#xd;
                        &quot;groupId&quot;: 0,&#xd;
                        &quot;createdTime&quot;: &quot;0001-01-01T00:00:00&quot;,&#xd;
                        &quot;modifiedTime&quot;: &quot;0001-01-01T00:00:00&quot;,&#xd;
                        &quot;filesInfo&quot;: null,&#xd;
                        &quot;group&quot;: null,&#xd;
                        &quot;cameraAnimationTemplate&quot;: null,&#xd;
                        &quot;cameraController&quot;: [],&#xd;
                        &quot;files&quot;: [&#xd;
                            {&#xd;
                                &quot;file&quot;: 0,&#xd;
                                &quot;resolution&quot;: null,&#xd;
                                &quot;source&quot;: {&#xd;
                                    &quot;uploadId&quot;: &quot;${event3-cameraAnimation-uploadId}&quot;,&#xd;
                                    &quot;copyFrom&quot;: null&#xd;
                                },&#xd;
                                &quot;version&quot;: null,&#xd;
                                &quot;extension&quot;: 6&#xd;
                            }&#xd;
                        ]&#xd;
                    },&#xd;
                    &quot;cameraAnimationTemplate&quot;: null,&#xd;
                    &quot;event&quot;: null&#xd;
                }&#xd;
            ],&#xd;
            &quot;cameraFilterController&quot;: [],&#xd;
            &quot;characterController&quot;: [&#xd;
                {&#xd;
                    &quot;id&quot;: 0,&#xd;
                    &quot;eventId&quot;: 0,&#xd;
                    &quot;controllerSequenceNumber&quot;: 0,&#xd;
                    &quot;characterId&quot;: ${characterId},&#xd;
                    &quot;activationCue&quot;: 0,&#xd;
                    &quot;endCue&quot;: 0,&#xd;
                    &quot;rotation&quot;: 0,&#xd;
                    &quot;outfitId&quot;: null,&#xd;
                    &quot;character&quot;: null,&#xd;
                    &quot;event&quot;: null,&#xd;
                    &quot;outfit&quot;: null,&#xd;
                    &quot;characterControllerBackgroundDancer&quot;: null,&#xd;
                    &quot;characterControllerBodyAnimation&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: 0,&#xd;
                            &quot;characterControllerId&quot;: 0,&#xd;
                            &quot;controllerSequenceNumber&quot;: 0,&#xd;
                            &quot;primaryBodyAnimationId&quot;: 66,&#xd;
                            &quot;lowerBodyAnimationId&quot;: null,&#xd;
                            &quot;animationSpeed&quot;: 0,&#xd;
                            &quot;activationCue&quot;: 9082,&#xd;
                            &quot;endCue&quot;: 12586,&#xd;
                            &quot;locomotion&quot;: false,&#xd;
                            &quot;looping&quot;: false,&#xd;
                            &quot;characterController&quot;: null,&#xd;
                            &quot;lowerBodyAnimation&quot;: null,&#xd;
                            &quot;primaryBodyAnimation&quot;: null&#xd;
                        }&#xd;
                    ],&#xd;
                    &quot;characterControllerFaceVoice&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: 0,&#xd;
                            &quot;characterControllerId&quot;: 0,&#xd;
                            &quot;controllerSequenceNumber&quot;: 0,&#xd;
                            &quot;voiceTrackId&quot;: null,&#xd;
                            &quot;faceAnimationId&quot;: null,&#xd;
                            &quot;voiceFilterId&quot;: 7,&#xd;
                            &quot;activationCue&quot;: 0,&#xd;
                            &quot;endCue&quot;: 0,&#xd;
                            &quot;extremeExpressionId&quot;: null,&#xd;
                            &quot;faceVfxId&quot;: null,&#xd;
                            &quot;voiceSoundVolume&quot;: 100,&#xd;
                            &quot;characterController&quot;: null,&#xd;
                            &quot;extremeExpression&quot;: null,&#xd;
                            &quot;faceAnimation&quot;: null,&#xd;
                            &quot;faceVfx&quot;: null,&#xd;
                            &quot;voiceFilter&quot;: null,&#xd;
                            &quot;voiceTrack&quot;: {&#xd;
                                &quot;files&quot;: [&#xd;
                                    {&#xd;
                                        &quot;file&quot;: 0,&#xd;
                                        &quot;resolution&quot;: null,&#xd;
                                        &quot;source&quot;: {&#xd;
                                            &quot;uploadId&quot;: &quot;${event3-voiceTrack-uploadId}&quot;,&#xd;
                                            &quot;copyFrom&quot;: null&#xd;
                                        },&#xd;
                                        &quot;version&quot;: null,&#xd;
                                        &quot;extension&quot;: 3&#xd;
                                    }&#xd;
                                ],&#xd;
                                &quot;id&quot;: 0,&#xd;
                                &quot;assetStoreInfoId&quot;: null,&#xd;
                                &quot;languageId&quot;: 1,&#xd;
                                &quot;groupId&quot;: 1,&#xd;
                                &quot;createdTime&quot;: &quot;0001-01-01T00:00:00&quot;,&#xd;
                                &quot;modifiedTime&quot;: &quot;0001-01-01T00:00:00&quot;,&#xd;
                                &quot;size&quot;: null,&#xd;
                                &quot;channels&quot;: null,&#xd;
                                &quot;samplingSize&quot;: null,&#xd;
                                &quot;duration&quot;: 0,&#xd;
                                &quot;samplingFrequency&quot;: null,&#xd;
                                &quot;filesInfo&quot;: null,&#xd;
                                &quot;assetStoreInfo&quot;: null,&#xd;
                                &quot;group&quot;: null,&#xd;
                                &quot;language&quot;: null,&#xd;
                                &quot;characterControllerFaceVoice&quot;: []&#xd;
                            }&#xd;
                        }&#xd;
                    ],&#xd;
                    &quot;characterControllerUmaRecipe&quot;: [],&#xd;
                    &quot;orderNumber&quot;: 0&#xd;
                }&#xd;
            ],&#xd;
            &quot;eventAndEventSpecialAssetbundle&quot;: null,&#xd;
            &quot;musicController&quot;: [],&#xd;
            &quot;propController&quot;: null,&#xd;
            &quot;setLocationController&quot;: [&#xd;
                {&#xd;
                    &quot;id&quot;: 0,&#xd;
                    &quot;eventId&quot;: 0,&#xd;
                    &quot;controllerSequenceNumber&quot;: 0,&#xd;
                    &quot;setLocationId&quot;: 202,&#xd;
                    &quot;activationCue&quot;: 4734,&#xd;
                    &quot;endCue&quot;: 8238,&#xd;
                    &quot;timeOfDay&quot;: 500,&#xd;
                    &quot;weatherId&quot;: 1,&#xd;
                    &quot;crowdId&quot;: null,&#xd;
                    &quot;crowdMovementId&quot;: null,&#xd;
                    &quot;maxCrowds&quot;: null,&#xd;
                    &quot;timelapseSpeed&quot;: 0,&#xd;
                    &quot;npeAnimationSpeed&quot;: null,&#xd;
                    &quot;videoClipId&quot;: null,&#xd;
                    &quot;photoId&quot;: null,&#xd;
                    &quot;videoActivationCue&quot;: null,&#xd;
                    &quot;videoEndCue&quot;: null,&#xd;
                    &quot;videoSoundVolume&quot;: 0,&#xd;
                    &quot;crowd&quot;: null,&#xd;
                    &quot;crowdMovement&quot;: null,&#xd;
                    &quot;event&quot;: null,&#xd;
                    &quot;setLocation&quot;: null,&#xd;
                    &quot;weather&quot;: null,&#xd;
                    &quot;videoClip&quot;: null,&#xd;
                    &quot;photo&quot;: null&#xd;
                }&#xd;
            ],&#xd;
            &quot;sfxController&quot;: null,&#xd;
            &quot;stickerController&quot;: null,&#xd;
            &quot;vfxController&quot;: [],&#xd;
            &quot;files&quot;: [&#xd;
                {&#xd;
                    &quot;file&quot;: 1,&#xd;
                    &quot;resolution&quot;: &quot;512x512&quot;,&#xd;
                    &quot;source&quot;: {&#xd;
                        &quot;uploadId&quot;: &quot;${event3-thumb512-uploadId}&quot;,&#xd;
                        &quot;copyFrom&quot;: null&#xd;
                    },&#xd;
                    &quot;version&quot;: null,&#xd;
                    &quot;extension&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;file&quot;: 1,&#xd;
                    &quot;resolution&quot;: &quot;128x128&quot;,&#xd;
                    &quot;source&quot;: {&#xd;
                        &quot;uploadId&quot;: &quot;${event3-thumb128-uploadId}&quot;,&#xd;
                        &quot;copyFrom&quot;: null&#xd;
                    },&#xd;
                    &quot;version&quot;: null,&#xd;
                    &quot;extension&quot;: 5&#xd;
                }&#xd;
            ],&#xd;
            &quot;orderNumber&quot;: 3&#xd;
        }&#xd;
    ],&#xd;
    &quot;groupAndLevel&quot;: null,&#xd;
    &quot;inverseRemixedFromLevel&quot;: null,&#xd;
    &quot;levelAbuseReport&quot;: null,&#xd;
    &quot;levelAndHashtag&quot;: null,&#xd;
    &quot;levelAndMultiLanguageLevel&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${main-server}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/Level</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout">${http.connectTimeout}</stringProp>
            <stringProp name="HTTPSampler.response_timeout">${http.responseTimeout}</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
